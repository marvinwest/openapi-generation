openapi: 3.0.3
info:
  description: empty for now
  title: Bookstorage API
  version: 0.0.1
servers:
- url: /
tags:
- name: Books
paths:
  /books:
    get:
      description: Find the information about the books in your storage, maybe filtered
        by title, author or year.
      parameters:
      - description: Title of the book
        explode: true
        in: query
        name: title
        required: false
        schema:
          type: string
        style: form
      - description: Author of the book
        explode: true
        in: query
        name: author
        required: false
        schema:
          type: string
        style: form
      - description: Year the book was published
        explode: true
        in: query
        name: year
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookInformationList'
          description: OK
        "400":
          description: |-
            Bad Request: if the request cannot be processed due to a client error.

              For example:

              - invalid request syntax
              - semantical error in request, like:
                - invalid reference in request data (for instance bookId refers to a Book that does not exist)
                - missing field that is required
      summary: Fetch a list of information about the books in your storage
      tags:
      - Books
      x-accepts: application/json
      x-tags:
      - tag: Books
    post:
      description: Add a book to your storage.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
        description: empty for now
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookInformation'
          description: created
        "400":
          description: |-
            Bad Request: if the request cannot be processed due to a client error.

              For example:

              - invalid request syntax
              - semantical error in request, like:
                - invalid reference in request data (for instance bookId refers to a Book that does not exist)
                - missing field that is required
      summary: Add a book to your storage
      tags:
      - Books
      x-contentType: application/json
      x-accepts: application/json
      x-tags:
      - tag: Books
  /books/{bookId}:
    delete:
      description: Delete a book from the storage
      parameters:
      - description: UUID of the book
        explode: false
        in: path
        name: bookId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: no content
        "400":
          description: |-
            Bad Request: if the request cannot be processed due to a client error.

              For example:

              - invalid request syntax
              - semantical error in request, like:
                - invalid reference in request data (for instance bookId refers to a Book that does not exist)
                - missing field that is required
      summary: Delete a book from the storage
      tags:
      - Books
      x-accepts: application/json
      x-tags:
      - tag: Books
    get:
      description: Fetch a book by its bookId
      parameters:
      - description: UUID of the book
        explode: false
        in: path
        name: bookId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: OK
        "400":
          description: |-
            Bad Request: if the request cannot be processed due to a client error.

              For example:

              - invalid request syntax
              - semantical error in request, like:
                - invalid reference in request data (for instance bookId refers to a Book that does not exist)
                - missing field that is required
      summary: Fetch a book by its bookId
      tags:
      - Books
      x-accepts: application/json
      x-tags:
      - tag: Books
components:
  responses:
    BadRequest:
      description: |-
        Bad Request: if the request cannot be processed due to a client error.

          For example:

          - invalid request syntax
          - semantical error in request, like:
            - invalid reference in request data (for instance bookId refers to a Book that does not exist)
            - missing field that is required
  schemas:
    Book:
      description: Book
      example:
        year: 0
        author: author
        title: title
      properties:
        title:
          description: Title of the book
          type: string
        author:
          description: Name of the author of the book
          type: string
        year:
          description: The year the book was published
          format: int32
          type: integer
      required:
      - author
      - title
      - year
      type: object
    BookInformation:
      description: Simplified information for finding books in your storage
      example:
        title: title
        bookId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        bookId:
          description: The UUID of the book in your storage
          format: uuid
          type: string
        title:
          description: Title of the book
          type: string
      required:
      - bookId
      - title
      type: object
    BookInformationList:
      description: List of BookInformations
      example:
        data:
        - title: title
          bookId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - title: title
          bookId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        data:
          items:
            $ref: '#/components/schemas/BookInformation'
          type: array
      required:
      - data
      type: object
